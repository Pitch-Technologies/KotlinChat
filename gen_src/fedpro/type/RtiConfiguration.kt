// Code generated by Wire protocol buffer compiler, do not edit.
// Source: fedpro.RtiConfiguration in DataTypes.proto
package fedpro.type

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import okio.ByteString

public class RtiConfiguration(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val configurationName: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val rtiAddress: String = "",
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val additionalSettings: String = "",
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 3,
  )
  public val federateProtocolServerAddress: String = "",
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 4,
  )
  public val federateProtocolAdditionalSettings: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<RtiConfiguration, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is RtiConfiguration) return false
    if (unknownFields != other.unknownFields) return false
    if (configurationName != other.configurationName) return false
    if (rtiAddress != other.rtiAddress) return false
    if (additionalSettings != other.additionalSettings) return false
    if (federateProtocolServerAddress != other.federateProtocolServerAddress) return false
    if (federateProtocolAdditionalSettings != other.federateProtocolAdditionalSettings) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + configurationName.hashCode()
      result = result * 37 + rtiAddress.hashCode()
      result = result * 37 + additionalSettings.hashCode()
      result = result * 37 + federateProtocolServerAddress.hashCode()
      result = result * 37 + federateProtocolAdditionalSettings.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """configurationName=${sanitize(configurationName)}"""
    result += """rtiAddress=${sanitize(rtiAddress)}"""
    result += """additionalSettings=${sanitize(additionalSettings)}"""
    result += """federateProtocolServerAddress=${sanitize(federateProtocolServerAddress)}"""
    result +=
        """federateProtocolAdditionalSettings=${sanitize(federateProtocolAdditionalSettings)}"""
    return result.joinToString(prefix = "RtiConfiguration{", separator = ", ", postfix = "}")
  }

  public fun copy(
    configurationName: String = this.configurationName,
    rtiAddress: String = this.rtiAddress,
    additionalSettings: String = this.additionalSettings,
    federateProtocolServerAddress: String = this.federateProtocolServerAddress,
    federateProtocolAdditionalSettings: String = this.federateProtocolAdditionalSettings,
    unknownFields: ByteString = this.unknownFields,
  ): RtiConfiguration = RtiConfiguration(configurationName, rtiAddress, additionalSettings,
      federateProtocolServerAddress, federateProtocolAdditionalSettings, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<RtiConfiguration> = object : ProtoAdapter<RtiConfiguration>(
      FieldEncoding.LENGTH_DELIMITED, 
      RtiConfiguration::class, 
      "type.googleapis.com/fedpro.RtiConfiguration", 
      PROTO_3, 
      null, 
      "DataTypes.proto"
    ) {
      override fun encodedSize(`value`: RtiConfiguration): Int {
        var size = value.unknownFields.size
        if (value.configurationName != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1,
            value.configurationName)
        if (value.rtiAddress != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2,
            value.rtiAddress)
        if (value.additionalSettings != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.additionalSettings)
        if (value.federateProtocolServerAddress != "") size +=
            ProtoAdapter.STRING.encodedSizeWithTag(4, value.federateProtocolServerAddress)
        if (value.federateProtocolAdditionalSettings != "") size +=
            ProtoAdapter.STRING.encodedSizeWithTag(5, value.federateProtocolAdditionalSettings)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: RtiConfiguration) {
        if (value.configurationName != "") ProtoAdapter.STRING.encodeWithTag(writer, 1,
            value.configurationName)
        if (value.rtiAddress != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.rtiAddress)
        if (value.additionalSettings != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.additionalSettings)
        if (value.federateProtocolServerAddress != "") ProtoAdapter.STRING.encodeWithTag(writer, 4,
            value.federateProtocolServerAddress)
        if (value.federateProtocolAdditionalSettings != "")
            ProtoAdapter.STRING.encodeWithTag(writer, 5, value.federateProtocolAdditionalSettings)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: RtiConfiguration) {
        writer.writeBytes(value.unknownFields)
        if (value.federateProtocolAdditionalSettings != "")
            ProtoAdapter.STRING.encodeWithTag(writer, 5, value.federateProtocolAdditionalSettings)
        if (value.federateProtocolServerAddress != "") ProtoAdapter.STRING.encodeWithTag(writer, 4,
            value.federateProtocolServerAddress)
        if (value.additionalSettings != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.additionalSettings)
        if (value.rtiAddress != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.rtiAddress)
        if (value.configurationName != "") ProtoAdapter.STRING.encodeWithTag(writer, 1,
            value.configurationName)
      }

      override fun decode(reader: ProtoReader): RtiConfiguration {
        var configurationName: String = ""
        var rtiAddress: String = ""
        var additionalSettings: String = ""
        var federateProtocolServerAddress: String = ""
        var federateProtocolAdditionalSettings: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> configurationName = ProtoAdapter.STRING.decode(reader)
            2 -> rtiAddress = ProtoAdapter.STRING.decode(reader)
            3 -> additionalSettings = ProtoAdapter.STRING.decode(reader)
            4 -> federateProtocolServerAddress = ProtoAdapter.STRING.decode(reader)
            5 -> federateProtocolAdditionalSettings = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return RtiConfiguration(
          configurationName = configurationName,
          rtiAddress = rtiAddress,
          additionalSettings = additionalSettings,
          federateProtocolServerAddress = federateProtocolServerAddress,
          federateProtocolAdditionalSettings = federateProtocolAdditionalSettings,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: RtiConfiguration): RtiConfiguration = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
