// Code generated by Wire protocol buffer compiler, do not edit.
// Source: fedpro.OrderType in DataTypes.proto
package fedpro.type

import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireEnum
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.JvmStatic
import kotlin.Int

public enum class OrderType(
  override val `value`: Int,
) : WireEnum {
  RECEIVE(0),
  TIMESTAMP(1),
  ;

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<OrderType> = object : EnumAdapter<OrderType>(
      OrderType::class, 
      PROTO_3, 
      OrderType.RECEIVE
    ) {
      override fun fromValue(`value`: Int): OrderType? = OrderType.fromValue(value)
    }

    @JvmStatic
    public fun fromValue(`value`: Int): OrderType? = when (value) {
      0 -> RECEIVE
      1 -> TIMESTAMP
      else -> null
    }
  }
}
