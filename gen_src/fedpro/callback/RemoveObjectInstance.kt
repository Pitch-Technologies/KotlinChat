// Code generated by Wire protocol buffer compiler, do not edit.
// Source: fedpro.RemoveObjectInstance in FederateAmbassador.proto
package fedpro.callback

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import fedpro.type.FederateHandle
import fedpro.type.ObjectInstanceHandle
import fedpro.type.OrderType
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import okio.ByteString

public class RemoveObjectInstance(
  @field:WireField(
    tag = 1,
    adapter = "fedpro.type.ObjectInstanceHandle#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val theObject: ObjectInstanceHandle? = null,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val userSuppliedTag: ByteString = ByteString.EMPTY,
  @field:WireField(
    tag = 3,
    adapter = "fedpro.type.OrderType#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val sentOrdering: OrderType = OrderType.RECEIVE,
  @field:WireField(
    tag = 4,
    adapter = "fedpro.type.FederateHandle#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 3,
  )
  public val producingFederate: FederateHandle? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<RemoveObjectInstance, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is RemoveObjectInstance) return false
    if (unknownFields != other.unknownFields) return false
    if (theObject != other.theObject) return false
    if (userSuppliedTag != other.userSuppliedTag) return false
    if (sentOrdering != other.sentOrdering) return false
    if (producingFederate != other.producingFederate) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (theObject?.hashCode() ?: 0)
      result = result * 37 + userSuppliedTag.hashCode()
      result = result * 37 + sentOrdering.hashCode()
      result = result * 37 + (producingFederate?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (theObject != null) result += """theObject=$theObject"""
    result += """userSuppliedTag=$userSuppliedTag"""
    result += """sentOrdering=$sentOrdering"""
    if (producingFederate != null) result += """producingFederate=$producingFederate"""
    return result.joinToString(prefix = "RemoveObjectInstance{", separator = ", ", postfix = "}")
  }

  public fun copy(
    theObject: ObjectInstanceHandle? = this.theObject,
    userSuppliedTag: ByteString = this.userSuppliedTag,
    sentOrdering: OrderType = this.sentOrdering,
    producingFederate: FederateHandle? = this.producingFederate,
    unknownFields: ByteString = this.unknownFields,
  ): RemoveObjectInstance = RemoveObjectInstance(theObject, userSuppliedTag, sentOrdering,
      producingFederate, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<RemoveObjectInstance> = object :
        ProtoAdapter<RemoveObjectInstance>(
      FieldEncoding.LENGTH_DELIMITED, 
      RemoveObjectInstance::class, 
      "type.googleapis.com/fedpro.RemoveObjectInstance", 
      PROTO_3, 
      null, 
      "FederateAmbassador.proto"
    ) {
      override fun encodedSize(`value`: RemoveObjectInstance): Int {
        var size = value.unknownFields.size
        if (value.theObject != null) size += ObjectInstanceHandle.ADAPTER.encodedSizeWithTag(1,
            value.theObject)
        if (value.userSuppliedTag != ByteString.EMPTY) size +=
            ProtoAdapter.BYTES.encodedSizeWithTag(2, value.userSuppliedTag)
        if (value.sentOrdering != OrderType.RECEIVE) size += OrderType.ADAPTER.encodedSizeWithTag(3,
            value.sentOrdering)
        if (value.producingFederate != null) size += FederateHandle.ADAPTER.encodedSizeWithTag(4,
            value.producingFederate)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: RemoveObjectInstance) {
        if (value.theObject != null) ObjectInstanceHandle.ADAPTER.encodeWithTag(writer, 1,
            value.theObject)
        if (value.userSuppliedTag != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 2,
            value.userSuppliedTag)
        if (value.sentOrdering != OrderType.RECEIVE) OrderType.ADAPTER.encodeWithTag(writer, 3,
            value.sentOrdering)
        if (value.producingFederate != null) FederateHandle.ADAPTER.encodeWithTag(writer, 4,
            value.producingFederate)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: RemoveObjectInstance) {
        writer.writeBytes(value.unknownFields)
        if (value.producingFederate != null) FederateHandle.ADAPTER.encodeWithTag(writer, 4,
            value.producingFederate)
        if (value.sentOrdering != OrderType.RECEIVE) OrderType.ADAPTER.encodeWithTag(writer, 3,
            value.sentOrdering)
        if (value.userSuppliedTag != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 2,
            value.userSuppliedTag)
        if (value.theObject != null) ObjectInstanceHandle.ADAPTER.encodeWithTag(writer, 1,
            value.theObject)
      }

      override fun decode(reader: ProtoReader): RemoveObjectInstance {
        var theObject: ObjectInstanceHandle? = null
        var userSuppliedTag: ByteString = ByteString.EMPTY
        var sentOrdering: OrderType = OrderType.RECEIVE
        var producingFederate: FederateHandle? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> theObject = ObjectInstanceHandle.ADAPTER.decode(reader)
            2 -> userSuppliedTag = ProtoAdapter.BYTES.decode(reader)
            3 -> try {
              sentOrdering = OrderType.ADAPTER.decode(reader)
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            4 -> producingFederate = FederateHandle.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return RemoveObjectInstance(
          theObject = theObject,
          userSuppliedTag = userSuppliedTag,
          sentOrdering = sentOrdering,
          producingFederate = producingFederate,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: RemoveObjectInstance): RemoveObjectInstance = value.copy(
        theObject = value.theObject?.let(ObjectInstanceHandle.ADAPTER::redact),
        producingFederate = value.producingFederate?.let(FederateHandle.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
